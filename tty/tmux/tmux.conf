## load system clipboard into tmux buffer 
bind -n C-r run-shell "tmux set-buffer "$(pbpaste)"; tmux pasteb -t !; tmux send ! C-m"
unbind -n C-r

## send the content of buffer to the last active pane
bind -n C-e run-shell "tmux pasteb -t !; tmux send -t ! C-m"


# Toggle popup window with c-y ## create new session 
bind-key -n -N 'Toggle popup window' M-s if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -E 'tmux attach-session -t popup || tmux new-session -s popup'
}
# Toggle popup window with c-y ## create new session 
bind-key -n -N 'Toggle popup window' M-p if-shell -F '#{==:#{session_name},scratch}' {
    detach-client
} {
    display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -E 'tmux attach-session -t scratch || tmux new-session -s popup'
}

# last active pane and maximize 


# last active pane without maximize 


### last active

# session

# window 

# pane 






# when display pane if inside zoom resize after selection maximae that window 
bind & run-shell "tmux resizep; tmux display-panes; tmux resizep -Z"

# when display pane if inside zoom resize after selection don't max





# select session/window/pane by name 
bind -n C-o run-shell "tmux choose-tree; tmux send-keys '/';"
# Set pane number display time to 2 seconds
set -g display-panes-time 2000

unbind -n right
unbind -n left

set -g default-terminal 'xterm-256color'
set -as terminal-overrides ',xterm*:RGB'

# Or use a wildcard instead of forcing a default mode.
# Some users in the comments of this gist have reported that this work better.
set -sg terminal-overrides ",*:RGB"

# You can also use the env variable set from the terminal.
# Useful if you share your configuration betweeen systems with a varying value.
#set -ag terminal-overrides ",$TERM:RGB"


# killing panes , windows , session , server

bind x kill-pane
bind w confirm kill-window
bind q confirm kill-session

bind X kill-pane -a
bind W kill-window -a
bind Q kill-session -a



# reoder tabs nubmer
set-option -g renumber-windows on

# interface

## mode indicator

setw -g mode-style 'fg=colour1 bg=colour18 bold'

## panes

set -g pane-border-style 'fg=colour19 bg=colour0 fill=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9 '


# Status Bar
set -g status-justify centre
set -g status-position top
set -g status-style 'bg=colour18 fg=colour137 '
set -g status-left-length 50
set -g status-left "#[fg=colour245,bg=colour8] #(whoami) #[fg=red,bg=colour19 ]  #S  #[bg=black ] #{cpu_fg_color} #{cpu_percentage} #{ram_fg_color} #{ram_icon} #{ram_percentage} "
set -g status-right '#[fg=colour243] #h #[fg=colour245,bg=colour19] %m/%d #[fg=colour245,bg=colour8] %H:%M:%S '
setw -g window-status-current-style 'bg=colour232,fg=colour247 bold'
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F ' # Current Window
setw -g window-status-style 'fg=red bg=colour243'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-bell-style 'fg=colour255 bg=red bold'

setw -g window-status-activity-style ' bg=colour19,fg=red'

# messages
set -g message-style 'fg=colour248 bg=black dim'

set -g status-bg black
set -g status-fg white



# misc
# set -sg escape-time 0


# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g status-keys vi
set -g history-limit 10000
# set -g mouse on
# setw -g mode-keys vi
setw -g monitor-activity on
set -g visual-activity off
# set status on

# start window index at 1
# set -g base-index 1


## naviagtions
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U 
bind -n M-l select-pane -R




# Move Between Tabs
bind -n M-p select-window -t :-
bind -n M-n select-window -t :+


unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
unbind 0



bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-0 select-window -t :10



# Shift arrow to switch windows
unbind -n M-Left  
unbind -n M-Right 

unbind -n E
unbind -n R



# tmux prefix
# unbind C-b
# set -g prefix C-Space
# unbind Space 

# binding keys

## panes
unbind %
bind -n 'M-\' split-window -h -c '#{pane_current_path}'
unbind '"'
bind -n 'M--' split-window -v -c '#{pane_current_path}'

bind -n M-x resize-pane -Z


# switch between sessions
bind -r ( switch-client -p
bind -r ) switch-client -n

# Resizing (mouse also works).
unbind Left
bind -r Left resize-pane -L 5
unbind Right
bind -r Right resize-pane -R 5
unbind Down
bind -r Down resize-pane -D 5
unbind Up
bind -r Up resize-pane -U 5

bind r run-shell "tmux source ~/.config/tmux/tmux.conf"

### exper/trying 

# hide panes
# bind h run-shell "tmux setw $(echo @HIDDEN_PANE_#{pane_id}|sed -e 's/%//g') $(tmux break-pane -dP)"
# bind H run-shell "tmux join-pane -hs $(tmux showw -v @HIDDEN_PANE_$(tmux run-shell \"echo '#{pane_id}+1'|sed -e 's/%//g'|bc\"))"
